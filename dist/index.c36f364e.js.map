{"mappings":"AAAA,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,MAAM,SAAS,SAAS,cAAc,CAAC;AAEvC,IAAI,QAAQ;AACZ,IAAI,eAAe;AACnB,IAAI,cAAc;AAClB,IAAI,cAAc,EAAE;AAEpB,eAAe;AACf,MAAM,QAAQ;AACd,+HAA+H;AAC/H,MAAM,SAAS;AACf,MAAM,SAAS,CAAC,iDAAiD,EAAE,OAAO,OAAO,EAAE,MAAM,CAAC;AAE1F,kCAAkC;AAClC,SAAS;IACP;IACA,IAAI,iBAAiB,aAAa;QAChC,QAAQ;QACR,OAAO,MAAM,GAAG;IAClB;AACF;AAEA,oDAAoD;AACpD,SAAS,cAAc,OAAO,EAAE,UAAU;IACxC,IAAK,MAAM,OAAO,WAChB,QAAQ,YAAY,CAAC,KAAK,UAAU,CAAC,IAAI;AAE7C;AAEA,iDAAiD;AACjD,SAAS;IACP,eAAe;IACf,cAAc,YAAY,MAAM;IAChC,8CAA8C;IAC9C,YAAY,OAAO,CAAC,CAAC;QACnB,MAAM,gBAAgB,SAAS,aAAa,CAAC;QAC7C,mCAAmC;QACnC,MAAM,OAAO,SAAS,aAAa,CAAC;QACpC,cAAc,MAAM;YAClB,MAAM,MAAM,KAAK,CAAC,IAAI;YACtB,QAAQ;QACV;QACA,yBAAyB;QACzB,MAAM,MAAM,SAAS,aAAa,CAAC;QACnC,cAAc,KAAK;YACjB,KAAK,MAAM,IAAI,CAAC,KAAK;YACrB,KAAK,MAAM,eAAe;YAC1B,OAAO,MAAM,eAAe;QAC9B;QACA,sDAAsD;QACtD,IAAI,gBAAgB,CAAC,QAAQ;QAC7B,oEAAoE;QACpE,KAAK,WAAW,CAAC;QACjB,cAAc,WAAW,CAAC;QAC1B,eAAe,WAAW,CAAC;IAC7B;AACF;AAEA,+BAA+B;AAC/B,eAAe;IACb,IAAI;QACF,MAAM,WAAW,MAAM,MAAM;QAC7B,cAAc,MAAM,SAAS,IAAI;QACjC;QACA,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;IACd,mBAAmB;IACrB;AACF;AAEA,kEAAkE;AAClE,OAAO,gBAAgB,CAAC,UAAU;IAChC,IACE,OAAO,WAAW,GAAG,OAAO,OAAO,IAAI,SAAS,IAAI,CAAC,YAAY,GAAG,QACpE,OACA;QACA,QAAQ;QACR;IACF;AACF;AAEA,UAAU;AACV","sources":["index.js"],"sourcesContent":["const imageContainer = document.getElementById(\"container--image\");\r\nconst loader = document.getElementById(\"loader\");\r\n\r\nlet ready = false;\r\nlet imagesLoaded = 0;\r\nlet totalImages = 0;\r\nlet photosArray = [];\r\n\r\n// Unsplash API\r\nconst count = 10;\r\n// Normally, don't store API Keys like this, but an exception made here because it is free, and the data is publicly available!\r\nconst apiKey = \"zSn40dBquaRY95NyU-7cnR7vc1rkdhTqCLA3h1iOFgk\";\r\nconst apiUrl = `https://api.unsplash.com/photos/random?client_id=${apiKey}&count=${count}`;\r\n\r\n// Check if all images were loaded\r\nfunction imageLoaded() {\r\n  imagesLoaded++;\r\n  if (imagesLoaded === totalImages) {\r\n    ready = true;\r\n    loader.hidden = true;\r\n  }\r\n}\r\n\r\n// Helper Function to Set Attributes on DOM Elements\r\nfunction setAttributes(element, attributes) {\r\n  for (const key in attributes) {\r\n    element.setAttribute(key, attributes[key]);\r\n  }\r\n}\r\n\r\n// Create Elements For Links & Photos, Add to DOM\r\nfunction displayPhotos() {\r\n  imagesLoaded = 0;\r\n  totalImages = photosArray.length;\r\n  // Run function for each object in photosArray\r\n  photosArray.forEach((photo) => {\r\n    const postContainer = document.createElement(\"div\");\r\n    // Create <a> to link to full photo\r\n    const item = document.createElement(\"a\");\r\n    setAttributes(item, {\r\n      href: photo.links.html,\r\n      target: \"_blank\",\r\n    });\r\n    // Create <img> for photo\r\n    const img = document.createElement(\"img\");\r\n    setAttributes(img, {\r\n      src: photo.urls.small,\r\n      alt: photo.alt_description,\r\n      title: photo.alt_description,\r\n    });\r\n    // Event Listener, check when each is finished loading\r\n    img.addEventListener(\"load\", imageLoaded);\r\n    // Put <img> inside <a>, then put both inside imageContainer Element\r\n    item.appendChild(img);\r\n    postContainer.appendChild(item);\r\n    imageContainer.appendChild(postContainer);\r\n  });\r\n}\r\n\r\n// Get photos from Unsplash API\r\nasync function getPhotos() {\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    photosArray = await response.json();\r\n    displayPhotos();\r\n    console.log(photosArray);\r\n  } catch (error) {\r\n    // Catch Error Here\r\n  }\r\n}\r\n\r\n// Check to see if scrolling near bottom of page, Load More Photos\r\nwindow.addEventListener(\"scroll\", () => {\r\n  if (\r\n    window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000 &&\r\n    ready\r\n  ) {\r\n    ready = false;\r\n    getPhotos();\r\n  }\r\n});\r\n\r\n// On Load\r\ngetPhotos();\r\n"],"names":[],"version":3,"file":"index.c36f364e.js.map","sourceRoot":"/__parcel_source_root/"}